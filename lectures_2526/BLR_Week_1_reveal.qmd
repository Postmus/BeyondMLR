---
title: "Beyond MLR - Week 1: Experimental Design I"
subtitle: "One-way ANOVA, stratified randomization, and randomized block designs"
author: "Dr. Douwe Postmus"
format:
  revealjs:
    theme: [default, custom-reveal.scss]
    slide-number: true
    toc: false
    slide-level: 2
    incremental: false
    code-overflow: wrap
    scrollable: true
    smaller: true
    width: 1280
    height: 720
    margin: 0.06
    max-scale: 2
    footer: "Beyond multiple linear regression - week 1"
    logo: UMCG-logo.png
execute:
  warning: false
  message: false
  eval: true
  echo: false
---

```{r}
#| include: false
#| message: false
#| warning: false
options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(knitr, rmarkdown, dplyr, ggplot2, emmeans, lme4, lmerTest, mixed, broom.mixed)
```

## Introduction

- Multiple linear regression models are used to study how a numerical outcome changes with one or more explanatory variables
- In many medical applications, the assumption of independent and identically distributed errors underlying linear regression is often violated
- This happens when observations are grouped or clustered, but the grouping variable is not accounted for in the analysis
  - For example, patients within hospitals, teeth within patients, or pupils within schools
- In these situations, linear mixed effects models can be used to capture the average relationship (fixed effects) while allowing for group-specific deviations (random effects)
- Throughout this course, we will build up from ordinary linear regression to mixed effects models for blocked, clustered, and longitudinal data

## Course organization 

- Before class: preparatory reading of selected book chapters  
- During class: build understanding through interactive lectures and develop data analysis skills through guided application exercises in the R labs
- After class: assignment to apply what you have learned from the readings and in-class activities to a new dataset

## Quarto (assignments)

- Quarto is an open-source publishing system that allows you to create dynamic, high-quality reports from a single source file containing both text and R code
  - As such, it enables reproducible research by integrating code and text, ensuring that reports and analyses are always up-to-date
- Quarto uses Markdown for easy formatting of headings, text, and tables and supports LaTeX for typesetting mathematical equations and handling references and citations
- It can be used to create a variety of outputs, including HTML, PDF, Word documents, slides, and even websites and blogs

## Requirements to earn course certificate

- To earn the course certificate, you must participate in at least 80% of the in-class meetings, and submit the weekly data analysis assignments
- For students requiring a grade, such as research master students or PhD students seeking Epidemiologist B registration, grading will be based on the final data analysis assignment

## Today's lecture

- Introduction to linear mixed effects models in the context of experimental design
- Part 1: Experiments with a single experimental factor (one-way ANOVA)  
  - Linear regression formulation using effects coding  
  - Interpretation through estimated marginal means

- Part 2: Experiments with an experimental and a blocking factor (two-way additive ANOVA)  
  - Distinguishing fixed effects and random effects  
  - Stratified randomization: treating the blocking factor as fixed  
  - Randomized block design: treating the blocking factor as random

# Part 1: Experiments with a single experimental factor

## Case study — weight loss interventions

- Design: 120 adults with obesity are randomly assigned to one of three intervention groups (n = 40 each): control (no treatment), lifestyle modification, or pharmacological treatment
- Response (outcome): change in body weight (kg) from baseline to week 12 (negative values indicate weight loss)

```{r}
#| echo: false
set.seed(123)
control  <- rnorm(40, mean = -0.5, sd = 3)
lifestyle<- rnorm(40, mean = -2.5, sd = 3)
drug     <- rnorm(40, mean = -4.0, sd = 3)

df_weight <- data.frame(
  Treatment = factor(rep(c("Control","Lifestyle","Pharmacological"), each = 40),
                     levels = c("Control","Lifestyle","Pharmacological")),
  Weight_change = c(control, lifestyle, drug)
)

# Apply effects coding
contrasts(df_weight$Treatment) <- contr.sum(3)
```

```{r}
#| echo: false
boxplot(Weight_change ~ Treatment, data = df_weight,
        col = c("gray85","skyblue","lightgreen"),
        ylab = "Change in body weight (kg)",
        main = NULL)
abline(h = 0, lty = 2, col = "darkgray")
```


## Statistical model specification

To compare the mean change in body weight across the three treatment groups, we use the one-way analysis of variance (ANOVA) model:

$$
Y_{ij} = \mu + \tau_i + \varepsilon_{ij}
$$

- Model components:
  - $Y_{ij}$: change in body weight for the $j$-th subject in the $i$-th treatment group
  - $\mu$ (grand mean): the overall mean across groups (the average of the group means)
  - $\tau_i$ (treatment deviations): the deviation of the mean of group $i$ from the grand mean; constrained so $\sum_i \tau_i = 0$
  - $\varepsilon_{ij}$ (residual error): the deviation for subject $j$ from the mean of group $i$
- Statistical assumptions:
  - $\varepsilon_{ij}\sim\mathcal{N}(0,\sigma^2)$: errors are independent and identically normally distributed with mean zero and common variance $\sigma^2$ (homoscedasticity)

## Estimation using linear regression

- A one-way ANOVA can be performed using the linear regression framework  
- To reproduce the ANOVA model specification, **effects coding** (sum-to-zero contrasts) is used, with *Pharmacological* as the implied category  
- The table below shows how treatment levels are coded and the corresponding estimated regression coefficients

:::: {.columns style="font-size:70%"}

::: {.column width="50%"}

**Variable coding (effects coding)**

| Treatment         | Intercept | Treatment1 | Treatment2 |
|-------------------|:----------:|:--------:|:----------:|
| Control           | 1 | 1 | 0 |
| Lifestyle         | 1 | 0 | 1 |
| Pharmacological   | 1 | −1 | −1 |

:::

::: {.column width="50%"}

**Estimated coefficients**

```{r}
#| echo: false
fit <- lm(Weight_change ~ Treatment, data = df_weight)
kable(
  tidy(fit)[, c("term","estimate","std.error","p.value")],
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 100%; margin-left: 0; margin-right: auto"'
)
```

:::

::::

```{=html}
<div style="margin-top:1em;"></div>
```

- With effects coding, the intercept corresponds to the **grand mean**, and the treatment coefficients represent **group deviations** from that mean
- This differs from dummy coding, where the intercept equals the mean of the reference group, and each coefficient represents the difference between that group and the reference

## Estimated marginal means (EMMs)

- ANOVA parameters describe how each group mean deviates from the overall (grand) mean
- Estimated marginal means (EMMs) re-express the same model in terms of the expected mean outcome for each group
- In a one-way ANOVA, the EMMs are identical to the observed group means
- In models with multiple factors, EMMs represent predicted group means that are averaged over the levels of the other factors in the model

```{=html}
<div style="margin-top:1.0em;"></div>
```

```{r}
kable(
  tidy(emmeans(fit, ~ Treatment)),
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 80%; margin-left: 0; margin-right: auto"'
)
```

## ANOVA table and global hypothesis test

- The total variation in the outcome ($SS_{Total}$) can be split into two parts:
  - **Between-group variation** ($SS_{Treatment}$): how much group means differ from the overall mean  
  - **Within-group variation** ($SS_{Residual}$): how much individual outcomes vary around their group mean  

- **Hypotheses**
  - $H_0$: all group means are equal ($\tau_{Control} = \tau_{Lifestyle} = \tau_{Pharmacological} = 0$) 
  - $H_1$: at least one group mean differs

:::: {.columns}

::: {.column width="50%"}

**Test statistic**
  $$
  F = \frac{MS_{Treatment}}{MS_{Residual}}
    = \frac{SS_{Treatment} / (g - 1)}{SS_{Residual} / (N - g)}
  $$
:::

::: {.column width="50%"}

**ANOVA table**

```{r}
#| echo: false
kable(
  tidy(anova(fit)),
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 80%; margin-left: 0; margin-right: auto"'
)
```

:::

::::

- Under $H_0$, this follows an $F_{g-1,\,N-g}$ distribution  
- A large $F$ (>>1) means that treatment explains more variation between groups than expected by chance

## Post-hoc comparisons

- When the overall treatment effect is significant, pairwise comparisons of the estimated marginal means can be performed to determine which specific treatment groups differ significantly from one another
- To account for the increased risk of Type I error from multiple testing, the resulting p-values should be adjusted using an appropriate multiplicity correction (for example, the Bonferroni method) to keep the overall significance level controlled

```{=html}
<div style="margin-top:1.0em;"></div>
```

```{r}
kable(
  tidy(emmeans(fit, ~ Treatment)),
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 80%; margin-left: 0; margin-right: auto"'
)
```

```{=html}
<div style="margin-top:1.5em;"></div>
```

```{r}
emms <- emmeans(fit, ~ Treatment)
kable(
  tidy(pairs(emms, adjust="Bonferroni")),
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 80%; margin-left: 0; margin-right: auto"'
)
```

## Model diagnostics

- To assess the adequacy of the fitted model, different diagnostic plots can be created:
  - **Normal Q-Q Plot**: Used to assess normality of the errors
  - **Residuals vs Fitted Plot**: Used to assess homoscedasticity (constant variance) for the errors

:::: {.columns}

::: {.column width="50%"}
```{r}
# Normal Q-Q
plot(fit, which = 2, main = "Normal Q-Q")
```
:::

::: {.column width="50%"}
```{r}
# Residuals vs Fitted
plot(fit, which = 1, main = "Residuals vs Fitted")
```
:::

::::

## Lab 1: one-way ANOVA

::: {.figure}
![](/R-lab.png){width="60%" alt="Lab session"}
:::

# Part 2: Experiments with an experimental and a blocking factor

## Nuisance variables

- Nuisance variables are variables that affect the response but are not of primary interest
- Common examples include age, baseline systolic blood pressure, comorbidity, or study center
- If not controlled, these variables can:
  - Increase random variation → more noise and lower precision
  - Introduce systematic differences between treatment groups → biased estimates of treatment effects
- Randomization helps to balance nuisance variables across treatments on average
- Blocking accounts for nuisance variables by partitioning their variation out of the residual error, leading to more precise estimates of treatment effects

## Reducing residual variation through blocking

- Design stage
  - Experimental units are assigned to blocks defined by levels of a known nuisance variable (e.g., study center, sex, baseline severity)  
  - Treatments are randomized within each block to avoid bias and maintain balance across the levels of the nuisance variable (this creates an *orthogonal design*)
  
- Analysis stage
  - The block factor is included as second factor in the statistical model:  
  
  $$Y_{ijk} = \mu + \tau_i + \beta_j + \varepsilon_{ijk}$$

  - This additive model separates block effects ($\beta_j$) from residual error ($\varepsilon_{ijk}$), reducing unexplained variability and allowing treatment effects ($\tau_i$) to be estimated with greater precision
  - The resulting formulation is known as a **two-way (additive) ANOVA**
 
## First example: stratified randomization

- Study population: 135 patients with baseline SBP ≥140 mmHg, classified into three hypertension grades
  - Grade 1: 140–159 mmHg
  - Grade 2: 160–179 mmHg
  - Grade 3: ≥180 mmHg
- Randomization: performed separately within each grade to ensure that all treatments are represented equally across hypertension categories
- Treatments: Control, Drug A, Drug B (n = 45 per group; 15 per grade)
- Outcome: change in SBP (mmHg) from baseline to week 52

```{r}
set.seed(431)

# design
trt_levels  <- c("Control","DrugA","DrugB")
grades      <- c("Grade1","Grade2","Grade3")              # SBP-only grading
n_per_trt   <- 45                                          # divisible by 3 grades
n_per_cell  <- n_per_trt / length(grades)
sd_eps      <- 8

# treatment means (overall), mmHg change over 12 weeks (plausible magnitudes)
trt_mean <- c(Control = -4, DrugA = -11, DrugB = -8)

# strong baseline grade effect on change (higher baseline → larger drop)
grade_effect <- c(Grade1 = 0, Grade2 = -6, Grade3 = -12)

# helper to simulate baseline SBP within each grade
r_sbp <- function(grade, n) {
  if (grade == "Grade1") rnorm(n, mean = 148, sd = 6)     # 140–159
  else if (grade == "Grade2") rnorm(n, mean = 168, sd = 6) # 160–179
  else rnorm(n, mean = 185, sd = 7)                        # ≥180
}

# build stratified dataset: equal n per grade × treatment
df_bp_strat <- do.call(
  rbind,
  lapply(grades, function(g) {
    do.call(
      rbind,
      lapply(trt_levels, function(t) {
        mu <- trt_mean[[t]] + grade_effect[[g]]
        n  <- n_per_cell
        data.frame(
          HypertensionGrade = g,
          Treatment = t,
          Baseline_SBP = r_sbp(g, n),
          SBP_change  = rnorm(n, mean = mu, sd = sd_eps)
        )
      })
    )
  })
)

df_bp_strat$HypertensionGrade <- factor(df_bp_strat$HypertensionGrade, levels = grades)
df_bp_strat$Treatment <- factor(df_bp_strat$Treatment, levels = trt_levels)
contrasts(df_bp_strat$Treatment) <- contr.sum(3)
contrasts(df_bp_strat$HypertensionGrade) <- contr.sum(3)
```

## Exploratory data analysis

```{r}
eda_sum <- df_bp_strat %>%
  group_by(Treatment, HypertensionGrade) %>%
  summarise(
    n    = n(),
    mean = mean(SBP_change),
    sd   = sd(SBP_change),
    se   = sd / sqrt(n),
    tcrt = qt(0.975, df = n - 1),
    ci   = tcrt * se,
    .groups = "drop"
  )

ggplot(eda_sum, aes(x = Treatment, y = mean,
                    group = HypertensionGrade,
                    color = HypertensionGrade, shape = HypertensionGrade)) +
  geom_line() +
  geom_point(size = 3) +
  #geom_errorbar(aes(ymin = mean - ci, ymax = mean + ci), width = 0.12) +
  labs(
    x = "Treatment",
    y = "Mean change in SBP (mmHg)",
    title = NULL
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "bottom")
```

## Results

:::: {.columns}

::: {.column width="50%"}

**One-way ANOVA ignoring hypertension grade**

```{r}
fit_oneway <- lm(SBP_change ~ Treatment, data = df_bp_strat)
kable(tidy(anova(fit_oneway)), digits = 3, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```
:::

::: {.column width="50%"}

**Two-way additive ANOVA**

```{r}
fit_adj <- lm(SBP_change ~ Treatment + HypertensionGrade, data = df_bp_strat)
kable(tidy(anova(fit_adj)), digits = 3, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```
:::

::::

- Effect of blocking / stratification:
  - When hypertension grade is ignored, its effect is absorbed into the residual error term
  - Including hypertension grade as an additional factor partitions out that systematic variation into a separate term
  - This reduces $MS_{Residual}$ while keeping $MS_{Treatment}$ constant (in orthogonal designs)
  - As a result, the F statistic for treatment increases, meaning the test gains power to detect treatment differences

## Second example: randomized block design

```{r}
set.seed(329)  # For reproducibility

# Increase between-cage variability
between_cage_sd <- 2  # Standard deviation for the cage effect

# Cage effect (one random effect per cage)
cage_effect <- rnorm(8, mean = 0, sd = between_cage_sd)

# Simulate data with larger cage effect
data <- data.frame(
  Cage = rep(1:8, times = 3),
  Treatment = rep(c("Placebo", "20 mg", "50 mg"), each = 8),
  Weight_Change = c(rnorm(8, mean = 14 + cage_effect, sd = 2),
                    rnorm(8, mean = 13 + cage_effect, sd = 2),
                    rnorm(8, mean = 11 + cage_effect, sd = 2))
)

data$Treatment <- factor(data$Treatment, levels=c("Placebo", "20 mg", "50 mg"))
data$Cage <- as.factor(data$Cage)
contrasts(data$Treatment) <- contr.sum(3)
contrasts(data$Cage) <- contr.sum(8)
```

- Objective: test the potential toxic effects of an experimental drug X by assessing changes in body weight in rats
- Study design:
  - Animals: 24 Sprague-Dawley rats
  - Groups:
    - Control Group: 8 rats receive a placebo
    - Drug X Group 1: 8 rats receive Drug X at 20 mg/kg/day
    - Drug X Group 2: 8 rats receive Drug X at 50 mg/kg/day
- Blocking by cage placement: randomization of treatments within each cage to control for variability due to environmental factors (e.g., light, temperature)

## Exploratory data analysis

```{r}
# Create the scatter plot
ggplot(data, aes(x = Weight_Change, y = factor(Cage), color = Treatment)) +
  geom_point(size = 4) +
  labs(title = NULL,
       x = "Weight Change (grams)",
       y = "Cage",
       color = "Treatment") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "bottom")
```

## One-way ANOVA ignoring cage

```{r}
m1 <- lm(Weight_Change ~ Treatment, data = data)
```

:::: {.columns}

::: {.column width="50%"}

**Estimated regression coefficients**

```{r}
kable(tidy(m1)[, c("term","estimate","std.error","p.value")], digits = 3, caption = NULL, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```

:::

::: {.column width="50%"}

**Variable coding**

```{r}
coding <- contrasts(data$Treatment)
colnames(coding) <- c("Treatment1", "Treatment2")
kable(coding, digits = 3, caption = NULL, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```

:::

```{=html}
<div style="margin-top:1.5em;"></div>
```

**ANOVA table**

```{r}
kable(tidy(anova(m1)), digits = 3, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```

::::

```{=html}
<div style="margin-top:1.5em;"></div>
```

- Ignoring cage differences pushes cage-to-cage variability into the residual error term
- This reduces power compared with models that account for the cage effect

## Incorporating the effect of cage

- Two options to include cage in the model
  - Treat cage as a fixed effect: adjust for these eight cages
    - Each level gets its own estimate
    - Inference applies only to these specific levels
    - Example: “How do rats in cage 1 compare to those in cage 2?”
  - Treat cage as a random effect: account for cage to cage variability
    - We are not interested in individual cages, but in their variability
    - Inference generalizes to the population of possible cages
    - Example: “How much do rat weights differ between cages on average?”


## Statistical model specification

:::: {.columns}

::: {.column width="50%"}

**Fixed-effects specification**

$$
Y_{ijk} = \mu + \tau_i + \beta_j + \varepsilon_{ijk}
$$

- Adds one separate parameter for each cage
- The model becomes more complex as more cages are added
- No estimate of how much cages differ on average

:::

::: {.column width="50%"}

**Random-effects specification**

$$
Y_{ijk} = \mu + \tau_i + b_j + \varepsilon_{ijk}, \quad b_j \sim N(0, \sigma_b^2)
$$

- $b_j$: random intercept describing how cage $j$ differs from the overall mean
- Estimates the average variability between cages ($\sigma_b^2$)
- Inference focuses on overall treatment effects while accounting for cage-to-cage variability

:::

::::

## Two-way ANOVA: cage as fixed effect

```{r}
m2 <- lm(Weight_Change ~ Treatment + Cage, data = data)
```

:::: {.columns}

::: {.column width="50%"}

**Estimated regression coefficients**

```{r}
kable(tidy(m2)[, c("term","estimate","std.error","p.value")], digits = 3, caption = NULL, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```
:::

::: {.column width="50%"}

**ANOVA table**

```{r}
kable(tidy(anova(m2)), digits = 3, format = "html", table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"')
```
:::

::::

```{=html}
<div style="margin-top:1.5em;"></div>
```

- Adjusts for the eight cages as specific environments
- Inference applies only to these cages

## Two-way ANOVA: cage as random effect

```{r}
m3 <- lmer(Weight_Change ~ Treatment + (1 | Cage), data = data)
```

:::: {.columns}

::: {.column width="50%"}

**Estimated fixed effects**

```{r}
library(broom.mixed)
fe <- tidy(m3, effects = "fixed")[, c("term","estimate","std.error","p.value")]

knitr::kable(
  fe,
  digits = 3,
  caption = NULL,
  format = "html",
  table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"'
)
```

```{=html}
<div style="margin-top: 0.75em;"></div>
```

**Random-effects variance components**

```{r}
vc <- as.data.frame(VarCorr(m3))[, c("grp","vcov","sdcor")]
names(vc) <- c("component","variance","sd")

knitr::kable(
  vc,
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"'
)
```
:::

::: {.column width="50%"}

**ANOVA table**

```{r}
a_tbl <- broom::tidy(anova(m3))

knitr::kable(
  a_tbl,
  digits = 3,
  format = "html",
  table.attr = 'style="font-size: 70%; margin-left: 0; margin-right: auto"'
)
```

:::

::::

```{=html}
<div style="margin-top:1.5em;"></div>
```

- Treats cage as a random effect sampled from a population of possible cages
- Estimates treatment effects and between cage variance and generalizes beyond these cages

## Understanding variance components

- In the one-way ANOVA that ignored cage, all unexplained variation was captured by a single residual error term → this error combined both *between-cage* and *within-cage* differences

- In the two-way ANOVA with cage as a random effect, that residual variability is *partitioned* into two parts:
  1. Between-cage variance: how much average weight change differs between cages
  2. Within-cage (residual) variance: how much rats differ within the same cage after accounting for both treatment and cage effects

| component | variance | sd |
|------------|-----------|----|
| Cage | 3.507 | 1.873 |
| Residual | 3.124 | 1.768 |

- Together, these are the **variance components**: they describe how the total unexplained variability from the simpler model is partitioned into variation **between** and **within** cage

## Intra-class correlation (ICC)

- The intra-class correlation (ICC) quantifies the proportion of the total unexplained variability that is due to between-cage differences:

$$
ICC = \frac{\sigma^2_{\text{cage}}}{\sigma^2_{\text{cage}} + \sigma^2_{\text{residual}}}
     = \frac{3.507}{3.507 + 3.124} = 0.529
$$

- Here, ICC ≈ 0.53, meaning that about 53% of the remaining variation (after accounting for treatment) arises from differences between cages
- Interpretation:
  - High ICC: rats in the same cage tend to have more similar outcomes
  - Low ICC: cage membership adds little information beyond treatment

## Fixed or random effects for blocking factors

- **Stratified randomization example:**
  - The blocking factor (hypertension grade) divides subjects into predefined categories used consistently across studies
  - The specific levels (grade 1, grade 2, grade 3) are fixed and always the same
  - The factor is modeled as a **fixed effect**, adjusting for systematic differences between these known categories

- **Randomized block design example:**
  - The blocking factor (cage) represents a random source of environmental variation
  - The cages themselves are not of intrinsic interest and could have been any comparable set
  - Modeling cage as a **random effect** captures this variability naturally and allows generalization beyond the observed cages

## Lab 2: randomized block design

::: {.figure}
![](/R-lab.png){width="60%" alt="Lab session"}
:::
